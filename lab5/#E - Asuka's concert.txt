//单调不增栈
#include <iostream>
#include <cstring>
using namespace std;

int main(int argc, char **argv)
{
    bool test = false;
    if (argc == 2 && strcmp(argv[1], "test") == 0)
        test = true;

    int n, v, l, r, m;
    cin >> n;
    long long int sum = 0;
    int data[200000];
    int top = -1;
    for (int i = 0; i < n; i++)
    {
        cin >> v;
        if (top == -1)
        {
            data[++top] = v;
            continue;
        }
        else
        {
            if (v < data[top])
            {
                data[++top] = v;
                sum++;
            }
            else
            {
                l = 0;
                r = top;
                while (l <= r)
                {
                    m = (l + r) / 2;
                    if (data[m] > v)
                        l = m + 1;
                    else
                        r = m - 1;
                } //此时，l为第一个小于或等于v的位置

                if (l == 0)
                    sum += top - l + 1;
                else
                    sum += (top - l + 1) + 1;

                while (top > -1 && data[top] < v)
                {
                    top--;
                }
                data[++top] = v;

                // test
                if (test)
                    cout << "v: " << v << " top: " << top << endl;
            }
        }

        // test
        if (test)
        {
            for (int i = 0; i <= top; i++)
            {
                cout << data[i] << " ";
            }
            cout << endl;
            cout << "sum: " << sum << endl;
        }
    }

    cout << sum << endl;

    return 0;
}

//样例代码
#include<iostream>
#include<cstring>
#include<cstdio>
using namespace std;
int st[500001],top=1,x;
int main()
{
    int n;
    int l,r,m;
    cin>>n;
    long long tot=0;
    cin>>st[1];
    for(int i=2;i<=n;i++){
      scanf("%d",&x);
      if(x<st[top]){
        tot++;top++;st[top]=x;
      }
      else {
	    l=1;
        r=top;
        while (l<r){
          m=(l+r)>>1;
          if (r==l+1)  m=r;
          if (st[m]>x) l=m;
          else r=m-1;
        }
        tot+=top-l+1;
        while(top>0&&st[top]<x)top--;
        st[++top]=x;
      } 
  }
    cout<<tot<<endl;
    return 0;
}