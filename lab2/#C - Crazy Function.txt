//满分 递归，但并非简单递归
#include <iostream>
#include <map>
using namespace std;

map<int, long long int> mapCrazy;

// long long int S(int *x)
// {
//     if (x[0] == 1 & x[1] == 1 & x[2] == 1 & x[3] == 1)
//         return 1;
//     else
//     {
//         long long int result;
//         long long int r0, r1, r2, r3;
//         if (x[0] == 1)
//             r0 = 0;
//         else
//         {
//             x[0]--;
//             r0 = S(x);
//             x[0]++;
//         }

//         if (x[1] == 1)
//             r1 = 0;
//         else
//         {
//             x[1]--;
//             r1 = S(x);
//             x[1]++;
//         }

//         if (x[2] == 1)
//             r2 = 0;
//         else
//         {
//             x[2]--;
//             r2 = S(x);
//             x[2]++;
//         }

//         if (x[3] == 0)
//             r3 = 0;
//         else
//         {
//             x[3]--;
//             r3 = S(x);
//             x[3]++;
//         }
//         result = r0 + r1 + r2 + r3;
//         return result;
//     }
// }

long long int Crazy(int *x)
{
    long long int result = 0;
    //排序，因为1 3 1 1与1 1 1 3等价，方便后面直接把它看作一个四位数字
    for (int i = 0; i < 3; i++)
    {
        for (int j = i + 1; j < 4; j++)
        {
            if (x[j] < x[i])
            {
                int temp = x[i];
                x[i] = x[j];
                x[j] = temp;
            }
        }
    }
    // for (int i = 0; i < 4; i++)
    // {
    //     cout << x[i] << "  ";
    // }
    // cout << endl;

    if (x[0] == 1 & x[1] == 1 & x[2] == 1)
        result = 1;
    else
    {
        int key = x[0] * 1000000 + x[1] * 10000 + x[2] * 100 + x[3];
        if (mapCrazy.count(key) == 1)
        {
            result = mapCrazy[key];
        }
        else
        {
            double r0, r1, r2, r3;
            if (x[0] == 1)
                r0 = 0;
            else
            {
                x[0]--;
                r0 = Crazy(x);
                x[0]++;
            }

            if (x[1] == x[0])
                r1 = r0;
            else
            {
                x[1]--;
                r1 = Crazy(x);
                x[1]++;
            }

            if (x[2] == x[1])
                r2 = r1;
            else
            {
                x[2]--;
                r2 = Crazy(x);
                x[2]++;
            }

            if (x[3] == x[2])
                r3 = r2;
            else
            {
                x[3]--;
                r3 = Crazy(x);
                x[3]++;
            }
            result = r0 + r1 + r2 + r3;
            result %= 998244353;
            mapCrazy.insert(pair<int, long long int>(key, result));
        }
    }
    return result;
}

int main()
{
    int *x = new int[4];
    cin >> x[0] >> x[1] >> x[2] >> x[3];

    if (x[0] <= 0 || x[1] <= 0 || x[2] <= 0 || x[3] <= 0)
    {
        cout << -1 << endl;
    }
    else
    {
        long long int result = Crazy(x);
        cout << result << endl;
    }
    delete[] x;

    return 0;
}