// 满分
#include <iostream>
#include <cstring>
#include <cmath>
#include <vector>
using namespace std;
bool test = false;
typedef long long int ll;
int n, m, result = 0;
int arr[105][105]{0};
int vis[105][105]{0};

void dfs(int fx, int fy, int x, int y)
{
    vis[x][y] = 1;
    for (int i = -1; i <= 1; i++)
    {
        for (int j = -1; j <= 1; j++)
        {
            if (i == 0 && j == 0)
                continue;
            if (x + i == fx && y + j == fy)
                continue;
            if (x + i < 0 || x + i >= n || y + j < 0 || y + j >= m)
                continue;

            if (vis[x + i][y + j] == 0 && arr[x + i][y + j] == 1)
            {
                dfs(x, y, x + i, y + j);
            }
        }
    }
}

int main(int argc, char **argv)
{
    if (argc == 2 && strcmp(argv[1], "test") == 0)
    {
        test = true;
        cout << "test pattern" << endl;
    }

    cin >> n >> m;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            char temp;
            cin >> temp;
            if (temp == '.')
                arr[i][j] = 0;
            else
                arr[i][j] = 1;
        }
    }
    if (test)
    {
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                cout << arr[i][j];
            }
            cout << endl;
        }
        cout << endl;
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            if (vis[i][j] == 0 && arr[i][j] == 1)
            {
                dfs(-1, -1, i, j);
                result++;
                if (test)
                {
                    for (int i = 0; i < n; i++)
                    {
                        for (int j = 0; j < m; j++)
                        {
                            cout<<vis[i][j];
                        }
                        cout<<endl;
                    }
                    cout<<endl;
                }
            }
        }
    }
    cout << result << endl;
    return 0;
}